# KIMERA SWM Production Dockerfile with GPU Support
# Optimized for NVIDIA RTX 3070 with CUDA 12.9
# Created: 2025-08-02 by Kimera Autonomous Architect

FROM nvidia/cuda:12.2-devel-ubuntu22.04

# Set environment variables for GPU optimization
ENV NVIDIA_VISIBLE_DEVICES=all
ENV NVIDIA_DRIVER_CAPABILITIES=compute,utility
ENV CUDA_HOME=/usr/local/cuda
ENV PATH=${CUDA_HOME}/bin:${PATH}
ENV LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${LD_LIBRARY_PATH}

# Set Python environment
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONPATH=/app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3.11 \
    python3.11-dev \
    python3-pip \
    curl \
    git \
    build-essential \
    software-properties-common \
    libpq-dev \
    libssl-dev \
    libffi-dev \
    libblas-dev \
    liblapack-dev \
    gfortran \
    && rm -rf /var/lib/apt/lists/*

# Create symlink for python
RUN ln -sf /usr/bin/python3.11 /usr/bin/python

# Upgrade pip and install base packages
RUN python -m pip install --upgrade pip setuptools wheel

# Create application directory
WORKDIR /app

# Copy requirements first for better caching
COPY requirements/ ./requirements/
COPY pyproject.toml ./

# Install GPU-optimized dependencies
RUN pip install --no-cache-dir torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121
RUN pip install --no-cache-dir cupy-cuda12x>=13.0.0
RUN pip install --no-cache-dir -r requirements/independent_production.txt

# Install additional production dependencies
RUN pip install --no-cache-dir \
    uvicorn[standard] \
    gunicorn \
    fastapi-instrumentator \
    prometheus-client \
    prometheus-fastapi-instrumentator \
    locust \
    nvidia-ml-py

# Copy application code
COPY src/ ./src/
COPY config/ ./config/
COPY scripts/ ./scripts/

# Create necessary directories
RUN mkdir -p /app/data /app/logs /app/models /app/cache /tmp/prometheus_multiproc

# Set permissions
RUN chmod +x scripts/health_check/*.py

# Health check script
COPY config/docker/healthcheck.py ./healthcheck.py
RUN chmod +x healthcheck.py

# Expose ports
EXPOSE 8000 8001 8002 8003

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD python healthcheck.py || exit 1

# Command to run the application
CMD ["python", "-m", "uvicorn", "src.main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "4", "--loop", "uvloop", "--http", "httptools"]